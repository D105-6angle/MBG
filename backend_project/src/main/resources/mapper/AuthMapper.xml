<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.model.mapper.auth.AuthMapper">

    <!-- 사용자 조회 -->
    <select id="findByProviderId" parameterType="string" resultType="com.ssafy.model.entity.User">
        SELECT u.user_id AS userId, u.code_id AS codeId, u.name, u.nickname, u.email,
               u.is_deleted AS isDeleted, u.created_at AS createdAt
        FROM users u INNER JOIN social_accounts s ON u.user_id = s.user_id
        WHERE s.provider_id = #{providerId}
    </select>

    <!-- 회원 테이블에 유저 정보 삽입 -->
    <insert id="insertUser" parameterType="com.ssafy.controller.auth.AuthRequest$RegistrationUserData" useGeneratedKeys="true" keyProperty="userId" keyColumn="user_id">
        INSERT INTO users (code_id, name, nickname, email)
        VALUES (#{codeId}, #{name}, #{nickname}, #{email})
    </insert>

    <!-- 소셜 테이블에 유저 정보 삽입 -->
    <insert id="insertSocial" parameterType="com.ssafy.model.entity.Social">
        INSERT INTO social_accounts(user_id, code_id, provider_id, refresh_token)
        VALUES(#{userId}, #{codeId}, #{providerId}, #{refreshToken})
    </insert>

    <!-- Refresh Token 조회 -->
    <select id="findSocialByProviderId" parameterType="String" resultType="com.ssafy.model.entity.Social">
        SELECT user_id AS userId, code_id AS codeId, provider_id AS providerId, refresh_token AS refreshToken
        FROM social_accounts
        WHERE provider_id = #{providerId}
    </select>

    <!-- Refresh Token 갱신 -->
    <update id="updateRefreshToken" parameterType="com.ssafy.model.entity.Social">
        UPDATE social_accounts
        SET refresh_token = #{refreshToken}
        WHERE provider_id = #{providerId}
    </update>

</mapper>
